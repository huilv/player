apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "app.smusic.android"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 16
        versionName "1.0.16.0711"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        staging.initWith(signingConfigs.debug)
        release {
            storeFile file(rootProject.ext.STORE_FILE)
            storePassword rootProject.ext.STORE_PASSWORD
            keyAlias rootProject.ext.KEY_ALIAS
            keyPassword rootProject.ext.KEY_PASSWORD
        }

        debug {
            storeFile file(rootProject.ext.STORE_FILE)
            storePassword rootProject.ext.STORE_PASSWORD
            keyAlias rootProject.ext.KEY_ALIAS
            keyPassword rootProject.ext.KEY_PASSWORD
        }
    }
    
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('release')) {
                    variant.outputs.each { output -> def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "${releaseTime()}_com.andli.myproject_${defaultConfig.versionName}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }

        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        multiDexEnabled true
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }



    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

}

repositories {

    jcenter()

    maven {
        url 'http://192.168.40.252:9090/repository/dotc-common/'
    }

    maven {
        url 'http://192.168.40.252:9090/repository/maven-snapshots'
    }

}
repositories {
    mavenCentral()
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.greenrobot:eventbus:3.0.0'
    testCompile 'junit:junit:4.12'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.google.android.exoplayer:exoplayer:r2.1.1'
    compile 'org.jetbrains:annotations-java5:15.0'
    compile 'com.dotc.sdk:allinonesdk:3.2.0.0710.719'
    compile 'com.dotc.sdk:analyticssdk:1.0.9.0710.716'
    compile 'com.sothree.slidinguppanel:library:3.3.1'
    compile 'com.google.android.gms:play-services-analytics:10.0.1'
    compile 'com.android.support:multidex:1.0.1'
    compile files('libs/pinyin4j-2.5.0.jar')
    compile 'com.google.android.gms:play-services-auth:10.0.1'
    compile 'com.dotc.sdk:libautolog:2.7.9'
    compile 'com.google.firebase:firebase-messaging:9.0.0'
    compile 'com.dotc.sdk:updatesdk:1.0.4.0315.250'
    compile 'com.android.support:design:25.3.1'
}
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}
apply plugin: 'com.google.gms.google-services'